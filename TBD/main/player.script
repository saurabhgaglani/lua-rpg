

go.property("speed", 50) -- the speed of movement

-- play animation unless the same animation is already playing
local function play_animation(self, animation)
	if self.current_animation ~= animation then
		self.current_animation = animation
		sprite.play_flipbook("#sprite", animation)
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.direction = vmath.vector3(0, 0, 0) -- the current direction of movement
	self.actions = {} -- mapping of input states (action_id mapped to pressed state)
	self.current_animation = nil -- the current animation
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if self.actions[hash("Left")] then
		play_animation(self, hash("player_movement_left"))
		self.direction.x = -self.speed
	elseif self.actions[hash("Right")] then
		play_animation(self, hash("player_movement_right"))
		sprite.set_hflip("#sprite", false)
		self.direction.x = self.speed
	else
		self.direction.x = 0
	end

	if self.actions[hash("Up")] then
		play_animation(self, hash("player_movement_up"))
		self.direction.y = self.speed
	elseif self.actions[hash("Down")] then
		play_animation(self, hash("player_movement_down"))
		self.direction.y = -self.speed
	else
		self.direction.y = 0
	end

	if self.direction.x == 0 and self.direction.y == 0 then
		if(self.current_animation == hash("player_movement_up")) then
			play_animation(self, hash("player_idle_up"))
		elseif(self.current_animation == hash("player_movement_left")) then
			play_animation(self, hash("player_idle_left"))
		elseif(self.current_animation == hash("player_movement_right")) then
			play_animation(self, hash("player_idle_right"))
		elseif(self.current_animation == hash("player_movement_down")) then
			play_animation(self, hash("player_idle"))
		end
	end

	go.set_position(go.get_position() + self.direction * dt)

end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.enter then
			msg.post("/knight_card#knight_card", "enable_text")
		else
			msg.post("/knight_card#knight_card", "disable_text")
		end
	end
end


function on_input(self, action_id, action)
	if action_id then
		if action.pressed then
			self.actions[action_id] = true
		elseif action.released then
			self.actions[action_id] = false
		end
	end
end